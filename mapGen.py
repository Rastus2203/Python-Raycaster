import random

#Tiled shapes
tileSize = 11
tileDictLength = 5

tileDict = {
    0:[
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    ],


    1:[
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
        [0, 0, 0, 5, 1, 1, 1, 0, 0, 0, 0],
        [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0],
        [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0],
        [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    ],

    2:[
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0],
        [0, 2, 0, 5, 0, 0, 0, 0, 0, 2, 0],
        [0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0],
        [0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0],
        [0, 2, 0, 0, 0, 2, 5, 0, 0, 2, 0],
        [0, 2, 0, 0, 2, 2, 2, 5, 0, 2, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0],
    ],

    3:[
        [3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3],
        [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
        [3, 0, 2, 2, 0, 0, 0, 2, 2, 0, 3],
        [3, 0, 3, 0, 0, 0, 0, 0, 2, 0, 3],
        [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
        [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
        [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
        [3, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3],
        [3, 0, 2, 2, 0, 0, 0, 2, 2, 0, 3],
        [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
        [3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3],
    ],

    4:[
        [0, 0, 0, 2, 2, 0, 2, 2, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [2, 0, 0, 5, 0, 1, 0, 0, 0, 0, 2],
        [2, 0, 0, 0, 5, 1, 0, 0, 0, 0, 2],
        [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0],
        [2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2],
        [2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2],
        [0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 2, 2, 0, 2, 2, 0, 0, 0],
    ],

    5:[
        [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1],
        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [1, 0, 2, 0, 0, 0, 0, 0, 2, 0, 1],
        [0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 1],
        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0],
        [1, 0, 2, 0, 0, 0, 0, 0, 2, 0, 1],
        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1],
    ],

    9:[
        [4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4],
        [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4],
        [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4],
        [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4],
        [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4],
        [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4],
        [4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4],
    ],
}


'''
{
    1:[
        [1, 1, 0, 0, 0, 1, 1],
        [1, 0, 0, 0, 0, 0, 1],
        [1, 0, 0, 0, 0, 0, 1],
        [0, 0, 0, 4, 0, 0, 0],
        [1, 0, 0, 0, 0, 0, 1],
        [1, 0, 0, 0, 0, 0, 1],
        [1, 1, 0, 0, 0, 1, 1]
    ],
    2:[
        [2, 2, 0, 0, 0, 2, 2],
        [2, 2, 0, 0, 0, 2, 2],
        [2, 0, 2, 0, 2, 0, 2],
        [0, 4, 0, 0, 0, 4, 0],
        [2, 0, 2, 0, 2, 0, 2],
        [2, 2, 0, 0, 0, 2, 2],
        [2, 2, 0, 0, 0, 2, 2]
    ],
    3:[
        [3, 3, 0, 0, 0, 3, 3],
        [3, 4, 0, 0, 0, 0, 3],
        [3, 0, 3, 0, 3, 0, 3],
        [0, 0, 3, 0, 3, 0, 0],
        [3, 0, 3, 0, 3, 0, 3],
        [3, 0, 0, 0, 0, 0, 3],
        [3, 3, 0, 0, 0, 3, 3]
    ]
}
'''


def mapGenBlank(size):
    #Making a blank map.
    xP = int(size/2)
    yP = int(size/2)
    worldMap = [[random.randint(0,0) for i in range(0,size)] for n in range(0,size)]
    for yIndex, y in enumerate(worldMap):
        for xIndex, x in enumerate(y):
            if yIndex == 0 or yIndex == size-1:
                worldMap[yIndex][xIndex] = 2
            if xIndex == 0 or xIndex == size-1:
                worldMap[yIndex][xIndex] = 3
    return worldMap

def mapGenTiled(size):

    xPTile = int(size/2)
    yPTile = int(size/2)
    tileMap = [[random.randint(0, tileDictLength) for i in range(0,size)] for n in range(0,size)]

    for yIndex, y in enumerate(tileMap):
        for xIndex, x in enumerate(y):
            chance = random.randint(0,15)
            if chance == 9:
                tileMap[yIndex][xIndex] = 9

    worldMap = mapGenBlank(size*tileSize+2)
    tileMap[yPTile][xPTile] = 1
    xP = tileSize*xPTile+3
    yP = tileSize*yPTile+3
    for yTileIndex, yTile in enumerate(tileMap):
        for xTileIndex, xTile in enumerate(yTile):
            current = tileDict[xTile]
            yMultiplier = yTileIndex*tileSize+1
            xMultiplier = xTileIndex*tileSize+1
            for yIndex, y in enumerate(current):
                for xIndex, x in enumerate(y):
                    worldMap[yIndex+yMultiplier][xIndex+xMultiplier] = current[yIndex][xIndex]

    return worldMap
